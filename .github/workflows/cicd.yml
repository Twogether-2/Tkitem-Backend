name: cicd

on:
  workflow_dispatch:
  push:
    branches:
      - main

env:
  IMAGE: ${{ secrets.DOCKERHUB_ID }}/${{ secrets.DOCKERHUB_REPO }}

jobs:
  test:
    name: Test (Gradle)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
      - uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Inject env file (tests only)
        run: |
          mkdir -p ./src/test/resources
          echo "${{ secrets.ENV_VARS }}" > ./src/test/resources/env.properties
      - name: Gradlew chmod
        run: chmod +x ./gradlew
      - name: Run tests
        run: ./gradlew clean test --no-daemon

  build:
    name: Build (Jar)
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
      - uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Gradlew chmod
        run: chmod +x ./gradlew
      - name: BootJar
        run: ./gradlew bootJar --no-daemon

  docker-push:
    name: Docker Build & Push (latest)
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Docker login
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_ID }}" --password-stdin
      - name: Build & Push :latest
        run: |
          docker build -f Dockerfile -t ${{ secrets.DOCKERHUB_ID }}/${{ secrets.DOCKERHUB_REPO }} .
          docker push ${{ secrets.DOCKERHUB_ID }}/${{ secrets.DOCKERHUB_REPO }}

  deploy:
    name: Deploy to EC2
    needs: docker-push
    runs-on: ubuntu-latest
    env:
      ENV_VARS: ${{ secrets.ENV_VARS }}
    steps:
      - name: SSH deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          envs: ENV_VARS
          script: |
            cd /home/ubuntu
            # GitHub secrets → EC2 환경변수 → 파일로 저장
            echo "$ENV_VARS" > /home/ubuntu/env.properties
            chmod 600 /home/ubuntu/env.properties

            sudo chmod +x deploy.sh
            sudo docker pull ${{ secrets.DOCKERHUB_ID }}/${{ secrets.DOCKERHUB_REPO }}
            ./deploy.sh
