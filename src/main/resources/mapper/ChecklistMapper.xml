<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="tkitem.backend.domain.checklist.mapper.ChecklistMapper">

    <!--trip존재 여부-->
    <select id="existsTrip" parameterType="long" resultType="int">
        SELECT COUNT(1) FROM TRIP WHERE trip_id = #{tripId}
    </select>

    <!--trip데이터 존재 여부 확인-->
    <select id="existsTripWithPackage" parameterType="long" resultType="int">
        SELECT COUNT(1)
        FROM TRIP t
        WHERE t.trip_id = #{tripId}
          AND t.tour_package_id IS NOT NULL
    </select>

    <!--체크리스트 자동 세팅-->
    <update id="generateAiCheckList" statementType="CALLABLE">
        { call P_CHECKLIST_AI_REBUILD(
                #{tripId, mode=IN, jdbcType=NUMERIC},
                #{memberId, mode=IN, jdbcType=NUMERIC}
        ) }
    </update>

    <!--체크리스트 조회-->
    <select id="selectChecklistByTrip"
            resultType="tkitem.backend.domain.checklist.vo.ChecklistItemVo">
        SELECT
        c.checklist_item_id        AS checklistItemId,
        c.trip_id                  AS tripId,
        c.product_category_sub_id  AS productCategorySubId,
        c.item_name                AS itemName,
        c.schedule_date            AS scheduleDate,
        c.score                    AS score,
        c.tier                     AS tier,
        c.notes                    AS notes,
        c.source                   AS source,
        c.is_checked               AS isChecked,
        c.is_purchased             AS isPurchased,
        c.created_at               AS createdAt,
        c.updated_at               AS updatedAt
        FROM CHECKLIST_ITEM c
        JOIN PRODUCT_CATEGORY_SUB s
        ON s.product_category_sub_id = c.product_category_sub_id
        WHERE c.trip_id = #{tripId}
        AND c.is_deleted = 'F'

        <choose>
            <!-- day=0 → 공통(NULL) -->
            <when test="day != null and day == 0">
                AND c.schedule_date IS NULL
            </when>
            <!-- day>=1 → 해당 일자 -->
            <when test="day != null and day &gt;= 1">
                AND c.schedule_date = #{day}
            </when>
            <!-- else: day 미지정 → 전체 -->
        </choose>

        <if test="checked != null">
            AND c.is_checked =
            <choose>
                <when test="checked"> 'T' </when>
                <otherwise> 'F' </otherwise>
            </choose>
        </if>

        <!-- isProduct: null=전체, true='T'만, false='F'만 -->
        <if test="isProduct != null">
            AND s.is_product =
            <choose>
                <when test="isProduct"> 'T' </when>
                <otherwise> 'F' </otherwise>
            </choose>
        </if>

        ORDER BY c.created_at ASC, c.product_category_sub_id ASC
    </select>


    <!-- 카테고리 존재 개수 -->
    <select id="countProductCategorySubs" parameterType="list" resultType="int">
        SELECT COUNT(1)
        FROM PRODUCT_CATEGORY_SUB
        WHERE product_category_sub_id IN
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </select>

    <!-- 체크리스트 수기 등록 -->
    <insert id="createChecklist">
        INSERT ALL
        <foreach collection="ids" item="subId">
            INTO CHECKLIST_ITEM (
            trip_id,
            product_category_sub_id,
            item_name,
            schedule_date,
            score,
            tier,
            notes,
            source,
            is_checked,
            is_purchased,
            is_deleted,
            created_at,
            created_by,
            updated_at,
            updated_by
            ) VALUES (
            #{tripId},
            #{subId},
            (SELECT SUBSTR(name, 1, 120)
            FROM PRODUCT_CATEGORY_SUB
            WHERE product_category_sub_id = #{subId}),
            #{scheduleDate, jdbcType=NUMERIC},
            NULL,
            NULL,
            NULL,
            'USER',
            'F',
            'F',
            'F',
            SYSTIMESTAMP,
            #{memberId},
            NULL,
            NULL
            )
        </foreach>
        SELECT 1 FROM DUAL
    </insert>

    <!-- 체크리스트 단건 삭제 -->
    <update id="softDeleteById">
        UPDATE CHECKLIST_ITEM
        SET is_deleted = 'T',
            updated_by = #{memberId}
        WHERE checklist_item_id = #{checklistItemId}
          AND is_deleted = 'F'
    </update>

    <!-- 체크리스트 전체 삭제(초기화) -->
    <update id="softDeleteAllActiveByTrip">
        UPDATE CHECKLIST_ITEM
        SET is_deleted = 'T',
            updated_by = #{memberId}
        WHERE trip_id = #{tripId}
          AND is_deleted = 'F'
    </update>

    <!-- 체크리스트 체크(활성/비활성) -->
    <update id="setCheckedById">
        UPDATE CHECKLIST_ITEM
        SET is_checked =
        <choose>
            <when test="checked"> 'T' </when>
            <otherwise> 'F' </otherwise>
        </choose>,
        updated_by = #{memberId}
        WHERE checklist_item_id = #{checklistItemId}
        AND is_deleted = 'F'
    </update>

    <!-- 여행 총 일 수 조회 -->
    <select id="getTripTotalDays" resultType="int">
        SELECT
            NVL(
                    (SELECT MAX(s.schedule_date)
                     FROM tour_package tp2
                              JOIN tour_detail_schedule s ON s.tour_id = tp2.tour_id
                     WHERE tp2.tour_package_id = t.tour_package_id),
                    CASE
                        WHEN t.departure_date IS NOT NULL AND t.arrival_date IS NOT NULL
                            THEN (TRUNC(t.arrival_date) - TRUNC(t.departure_date) + 1)
                        END
            ) AS totalDays
        FROM trip t
        WHERE t.trip_id = #{tripId}
    </select>
</mapper>
