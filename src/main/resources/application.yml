spring:
  application:
    name: Tkitem-Backend
  config:
    import: optional:classpath:env.properties
  datasource:
    url: ${ORACLE_DB_URL}
    driver-class-name: oracle.jdbc.OracleDriver
    username: ${ORACLE_DB_USERNAME}
    password: ${ORACLE_DB_PASSWORD}
    hikari:
      connectionInitSql: "ALTER SESSION DISABLE PARALLEL DML"

  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${EMAIL_USERNAME}
    password: ${EMAIL_PASSWORD}   # Gmail은 앱 비밀번호 필요
    properties:
      mail.smtp.auth: true
      mail.smtp.starttls.enable: true

  ai:
    chat:
      client:
        enabled: false
    retry:
      max-attempts: 10
    openai:
      api-key: ${OPEN_AI_API_KEY}
      base-url: https://api.openai.com
      chat:
        options:
          model: gpt-4o              # 또는 gpt-4o
      embedding:
        options:
          model: text-embedding-3-small   # 비용↓, 1536차원

gemini:
  api:
    key: ${GEMINI_API_KEY}

#    vertex:
#      ai:
#        gemini:
#          project-id:
#          api-key: ${GEMINI_API_KEY}
#          chat:
#            options:
#              model: gemini-1.5-flash
#              temperature: 0.1
#              max-tokens: 1024


  elasticsearch:
    uris: ${ELASTICSEARCH_HOST}
#    endpoint: ${ELASTICSEARCH_HOST}
#    apiKey: ${ELASTIC_API_KEY}

pipeline:
  index:
    enabled: false

logging:
  level:
    org.springframework.web.client: WARN
    org.apache.hc.client5.http: WARN
    org.apache.hc.client5.http.wire: OFF  # [주의] 매우 상세, 진단 끝나면 끄기
    org.springframework.ai: WARN
    tkitem.backend.domain.scheduleType.service: INFO
  file:
    name: logs/pipeline.log
  pattern:
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

rule:
  classifier:
    path: classpath:dummy/rule_keywords.json

app:
  classify:
    batch-size: 500          # 1회 처리량 (조절)
    ambiguity-margin: 0.06   # top1-top2 마진 미만이면 '애매'

mybatis:
  mapper-locations: classpath:mapper/*.xml
  configuration:
    map-underscore-to-camel-case: true
    default-executor-type: BATCH

swagger:
  server-url: ${SWAGGER_SERVER}

springdoc:
  swagger-ui:
    persistAuthorization: true

jwt:
  secret: ${JWT_SECRET}
  access:
    expiration: ${JWT_ACCESS_EXPIRATION}
  refresh:
    expiration: ${JWT_REFRESH_EXPIRATION}

kakao:
  api-key: ${KAKAO_API_KEY}

cloud:
  aws:
    cdn:
      url: ${CDN_URL}
    s3:
      bucket: ${AWS_S3_BUCKET}
    stack:
      auto: false
    region:
      static: ${AWS_REGION}
    credentials:
      access-key: ${AWS_ACCESS_KEY}
      secret-key: ${AWS_SECRET_KEY}

redis:
  enabled: true
  host: ${REDIS_HOST}
  port: ${REDIS_PORT}

elastic:
  apiKey: ${ELASTIC_API_KEY}

management:
  endpoints:
    web:
      exposure:
        include: health
  health:
    mail:
      enabled: false

toss:
  secret-key: ${TOSS_SECRET_KEY}